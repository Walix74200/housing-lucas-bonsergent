version: '3.8'

services:
  db:
    image: postgres:14
    container_name: housing-db
    environment:
      POSTGRES_DB: housing
      POSTGRES_USER: housing_user
      POSTGRES_PASSWORD: housing_user
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"


  housing-api:
    build:
      context: ./housing-api    # <--- dossier oÃ¹ se trouve le Dockerfile
      dockerfile: Dockerfile
    container_name: housing-api
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=housing
      - DB_USER=housing_user
      - DB_PASSWORD=housing_user
    depends_on:
      - db

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    hostname: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "PLAINTEXT://broker:9092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:29092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "broker:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  housing-consumer:
    build:
      context: ./housing-consumer
      dockerfile: Dockerfile
    container_name: housing-consumer
    depends_on:
      - broker
      - housing-api

volumes:
  postgres_data:
